{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kir\\\\WebstormProjects\\\\childout\\\\src\\\\pages\\\\ClientPanel.js\",\n  _s = $RefreshSig$();\nimport './PagesStyle.css';\nimport ListChildCard from \"../components/ListChildCard\";\nimport ModalWindow from \"../components/ModalWindow\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport Header from \"../components/Header\";\nimport io from \"socket.io-client\";\nimport Footer from \"../components/Footer\";\nimport axios from \"axios\";\nimport { UserId } from \"../App\";\nimport AbcientPage from \"./AbcientPage\";\nimport { useOutletContext } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://91.77.160.177:4000/'); // URL вашего сервера\nfunction ClientPanel() {\n  _s();\n  const [message, setMessage] = useState('');\n  const [modal, setModal] = React.useState(false);\n  const [activeChildCardName, setActiveChildCard] = React.useState({\n    fullName: '',\n    id: '',\n    numberPhone: '',\n    birthDate: ''\n  });\n  // const [dataStudents, setDataStudents] = React.useState([]);\n  const [className, dataStudents] = useOutletContext();\n  const [isLoading, setIsLoading] = useState(false);\n  const [dateOut, setDateOut] = React.useState(Date.now());\n  const {\n    user\n  } = useContext(UserId);\n  function parseDate(dateString) {\n    // Проверяем, заканчивается ли строка буквой 'Z'\n    if (dateString.endsWith('Z')) {\n      dateString = dateString.slice(0, -1); // Убираем 'Z'\n    }\n    // Разбиваем строку на дату и время\n    const [datePart, timePart] = dateString.split('T');\n    const [year, month, day] = datePart.split('-').map(Number);\n    const [hours, minutes] = timePart.split(':').map(Number);\n\n    // Создаём объект Date, учитывая UTC\n    const date = new Date(Date.UTC(year, month - 1, day, hours, minutes));\n    return date;\n  }\n  const sendMessage = () => {\n    // Отправляем сообщение на сервер\n    socket.emit('client-message', message);\n    fix(user.id, parseDate(dateOut)).then(r => alert('Пропуск успешно оформлен')).catch(e => alert('Произошла ошибка'));\n    console.log(parseDate(dateOut));\n    setMessage('');\n  };\n  const fix = async (teacherId, date_out) => {\n    const studentId = activeChildCardName.id;\n    try {\n      const response = await axios.post(`http://91.77.160.177:4001/fix_out`, {\n        mentor_id: teacherId,\n        student_id: studentId,\n        date_out: date_out\n      });\n      console.log(response.data);\n      return response.data;\n    } catch (er) {\n      console.log(er);\n    }\n  };\n  useEffect(() => {\n    setIsLoading(true);\n    setIsLoading(false);\n  }, []);\n  return !isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-page\",\n    children: [/*#__PURE__*/_jsxDEV(ListChildCard, {\n      dataStudents: dataStudents,\n      setModal: setModal,\n      setActiveChildCard: setActiveChildCard,\n      activeChildCardName: activeChildCardName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(ModalWindow, {\n      setDateOut: setDateOut,\n      sendMessage: sendMessage,\n      setMessage: setMessage,\n      isOpen: modal,\n      setModal: setModal,\n      setActiveChildCard: setActiveChildCard,\n      className: className,\n      fullName: activeChildCardName.fullName,\n      id: activeChildCardName.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 21\n  }, this);\n}\n_s(ClientPanel, \"TK23WbVmjFQPCKsih9LY0A7+bo4=\", false, function () {\n  return [useOutletContext];\n});\n_c = ClientPanel;\nexport default ClientPanel;\nvar _c;\n$RefreshReg$(_c, \"ClientPanel\");","map":{"version":3,"names":["ListChildCard","ModalWindow","React","useContext","useEffect","useState","Header","io","Footer","axios","UserId","AbcientPage","useOutletContext","jsxDEV","_jsxDEV","socket","ClientPanel","_s","message","setMessage","modal","setModal","activeChildCardName","setActiveChildCard","fullName","id","numberPhone","birthDate","className","dataStudents","isLoading","setIsLoading","dateOut","setDateOut","Date","now","user","parseDate","dateString","endsWith","slice","datePart","timePart","split","year","month","day","map","Number","hours","minutes","date","UTC","sendMessage","emit","fix","then","r","alert","catch","e","console","log","teacherId","date_out","studentId","response","post","mentor_id","student_id","data","er","children","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","_c","$RefreshReg$"],"sources":["C:/Users/kir/WebstormProjects/childout/src/pages/ClientPanel.js"],"sourcesContent":["import './PagesStyle.css'\r\n\r\nimport ListChildCard from \"../components/ListChildCard\";\r\nimport ModalWindow from \"../components/ModalWindow\";\r\nimport React, {useContext, useEffect, useState} from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport io from \"socket.io-client\";\r\nimport Footer from \"../components/Footer\";\r\nimport axios from \"axios\";\r\nimport {UserId} from \"../App\";\r\nimport AbcientPage from \"./AbcientPage\";\r\nimport {useOutletContext} from \"react-router-dom\";\r\n\r\n\r\nconst socket = io('http://91.77.160.177:4000/'); // URL вашего сервера\r\nfunction ClientPanel() {\r\n    const [message, setMessage] = useState('');\r\n    const [modal, setModal] = React.useState(false);\r\n    const [activeChildCardName, setActiveChildCard] = React.useState({fullName:'', id:'', numberPhone:'', birthDate:''});\r\n    // const [dataStudents, setDataStudents] = React.useState([]);\r\n    const [className, dataStudents] = useOutletContext()\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [dateOut, setDateOut] = React.useState(Date.now());\r\n    const { user } = useContext(UserId);\r\n    function parseDate(dateString) {\r\n        // Проверяем, заканчивается ли строка буквой 'Z'\r\n        if (dateString.endsWith('Z')) {\r\n            dateString = dateString.slice(0, -1); // Убираем 'Z'\r\n        }\r\n        // Разбиваем строку на дату и время\r\n        const [datePart, timePart] = dateString.split('T');\r\n        const [year, month, day] = datePart.split('-').map(Number);\r\n        const [hours, minutes] = timePart.split(':').map(Number);\r\n\r\n        // Создаём объект Date, учитывая UTC\r\n        const date = new Date(Date.UTC(year, month - 1, day, hours, minutes));\r\n        return date;\r\n    }\r\n    const sendMessage = () => {\r\n        // Отправляем сообщение на сервер\r\n        socket.emit('client-message', message);\r\n        fix(user.id, parseDate(dateOut)).then(r => alert('Пропуск успешно оформлен')).catch(e => alert('Произошла ошибка'));\r\n        console.log(parseDate(dateOut))\r\n        setMessage('');\r\n    };\r\n        const fix = async (teacherId, date_out) => {\r\n            const studentId = activeChildCardName.id;\r\n            try {\r\n                const response = await axios.post(`http://91.77.160.177:4001/fix_out`, { mentor_id:teacherId, student_id:studentId, date_out:date_out});\r\n                console.log(response.data)\r\n                return response.data;\r\n            }catch (er){\r\n\r\n                console.log(er);\r\n            }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true)\r\n        setIsLoading(false)\r\n    }, []);\r\n\r\n    return(\r\n        !isLoading&&<div className=\"main-page\">\r\n            {<ListChildCard dataStudents={dataStudents} setModal={setModal} setActiveChildCard={setActiveChildCard} activeChildCardName={activeChildCardName} />}\r\n            <ModalWindow setDateOut={setDateOut} sendMessage={sendMessage} setMessage={setMessage} isOpen={modal} setModal={setModal} setActiveChildCard={setActiveChildCard} className={className} fullName={activeChildCardName.fullName} id={activeChildCardName.id}  />\r\n        </div>\r\n    )\r\n}\r\nexport default ClientPanel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}