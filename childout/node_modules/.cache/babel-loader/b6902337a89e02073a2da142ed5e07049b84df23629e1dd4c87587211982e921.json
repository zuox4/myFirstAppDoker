{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kir\\\\WebstormProjects\\\\childout\\\\src\\\\components\\\\MultiSelectDropdown.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MultiSelectDropdown = ({\n  url,\n  name,\n  data\n}) => {\n  _s();\n  const options = data;\n  useEffect(() => {});\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const toggleDropdown = () => setIsOpen(!isOpen);\n  const handleOptionChange = optionId => {\n    setSelectedOptions(prevSelected => prevSelected.includes(optionId) ? prevSelected.filter(id => id !== optionId) : [...prevSelected, optionId]);\n  };\n  const handleSubmit = () => {\n    console.log('Отсутствуют' + {\n      name\n    }, selectedOptions);\n    setIsOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: toggleDropdown,\n      style: {\n        border: '1px solid #ccc',\n        padding: '10px',\n        cursor: 'pointer'\n      },\n      children: selectedOptions.length > 0 ? `Отсутствуют ${name}: ${selectedOptions.map(id => options.find(option => option.id === id).fullName).join(', ')}` : 'Отсутствуют по ' + name + ': ' + selectedOptions.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #ccc',\n        marginTop: '5px',\n        padding: '10px',\n        position: 'flex',\n        background: 'white'\n      },\n      children: [data.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: selectedOptions.includes(option.id),\n            onChange: () => handleOptionChange(option.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 33\n          }, this), option.fullName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 29\n        }, this)\n      }, option.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        style: {\n          marginTop: '10px'\n        },\n        children: \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u044C \\u0432\\u044B\\u0431\\u043E\\u0440\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(MultiSelectDropdown, \"GS5yMSx1rKUizOVR5C5h2IcP8tI=\");\n_c = MultiSelectDropdown;\nexport default MultiSelectDropdown;\nvar _c;\n$RefreshReg$(_c, \"MultiSelectDropdown\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","MultiSelectDropdown","url","name","data","_s","options","selectedOptions","setSelectedOptions","isOpen","setIsOpen","toggleDropdown","handleOptionChange","optionId","prevSelected","includes","filter","id","handleSubmit","console","log","children","onClick","style","border","padding","cursor","length","map","find","option","fullName","join","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","position","background","type","checked","onChange","_c","$RefreshReg$"],"sources":["C:/Users/kir/WebstormProjects/childout/src/components/MultiSelectDropdown.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\n\r\nconst MultiSelectDropdown = ({url, name, data}) => {\r\n    const options = data;\r\n\r\n    useEffect(()=>{\r\n\r\n    })\r\n    const [selectedOptions, setSelectedOptions] = useState([]);\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const toggleDropdown = () => setIsOpen(!isOpen);\r\n\r\n    const handleOptionChange = (optionId) => {\r\n        setSelectedOptions((prevSelected) =>\r\n            prevSelected.includes(optionId)\r\n                ? prevSelected.filter((id) => id !== optionId)\r\n                : [...prevSelected, optionId]\r\n        );\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        console.log('Отсутствуют'+ {name}, selectedOptions);\r\n        setIsOpen(false)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div onClick={toggleDropdown} style={{ border: '1px solid #ccc', padding: '10px', cursor: 'pointer' }}>\r\n                {selectedOptions.length > 0\r\n                    ? `Отсутствуют ${name}: ${selectedOptions.map(id => options.find(option => option.id === id).fullName).join(', ')}`\r\n                    : 'Отсутствуют по '+name + ': ' + selectedOptions.length}\r\n            </div>\r\n            {isOpen && (\r\n                <div style={{ border: '1px solid #ccc', marginTop: '5px', padding: '10px', position: 'flex', background: 'white' }}>\r\n                    {data.map((option) => (\r\n                        <div key={option.id}>\r\n                            <label>\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    checked={selectedOptions.includes(option.id)}\r\n                                    onChange={() => handleOptionChange(option.id)}\r\n                                />\r\n                                {option.fullName}\r\n                            </label>\r\n                        </div>\r\n                    ))}\r\n                    <button onClick={handleSubmit} style={{ marginTop: '10px' }}>Подтвердить выбор</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MultiSelectDropdown;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}