{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kir\\\\WebstormProjects\\\\childout\\\\src\\\\components\\\\CardOut.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CardOut({\n  msg,\n  order,\n  filterText,\n  filteredMessages\n}) {\n  _s();\n  const [timer, setTimer] = useState(0);\n  const [confirm, setConfirm] = useState(false);\n  const [currentTime, setCurrentTime] = useState(Number(Date.now()));\n  const [loading, setLoading] = useState();\n  const [name, setName] = useState(\"\");\n  const [timeOut, setTimeOut] = useState(Number(Date.now()));\n  function parseDataStudent(message) {\n    const dateOut = Number(new Date(message.split(' ')[message.split(' ').length - 1]));\n    const childName = message.split(' ')[0] + ' ' + message.split(' ')[1];\n    setName(childName);\n    setTimeOut(dateOut);\n    if (currentTime > dateOut) {\n      setConfirm(true);\n    } else setConfirm(false);\n    setLoading(false);\n  }\n  const [count, setCount] = useState(0);\n  const [isRunning, setIsRunning] = useState(true);\n  useEffect(() => {\n    let interval;\n    if (isRunning) {\n      // Устанавливаем интервал для обновления компонента каждую секунду\n      interval = setInterval(() => {\n        setCount(prevCount => prevCount + 1);\n        console.log(count);\n      }, 1000);\n    }\n\n    // Очистка интервала при размонтировании или изменении isRunning\n    return () => {\n      if (interval) {\n        clearInterval(interval);\n      }\n    };\n  }, [isRunning]); // Используем isRunning как зависимость\n  useEffect(() => {\n    setLoading(true);\n    parseDataStudent(msg);\n  }, [msg, filterText]);\n  function formatMessage(message) {\n    const childName = message.split(' ')[0] + ' ' + message.split(' ')[1];\n    const timeOut = formatDateTime(message.split(' ')[message.split(' ').length - 1]);\n    const dateOut = Number(new Date(message.split(' ')[message.split(' ').length - 1]));\n    const dateNow = Date.now();\n    return {\n      name: childName,\n      timeOut: timeOut,\n      confirmOut: dateOut <= dateNow ? 'Выход разрешен' : 'Выход запрещен'\n    };\n  }\n  function formatDateTime(dateTimeString) {\n    // Создаем объект даты из строки\n    const date = new Date(dateTimeString);\n\n    // Извлекаем необходимые компоненты даты и времени\n    const day = String(date.getDate()).padStart(2, '0');\n    const month = String(date.getMonth() + 1).padStart(2, '0'); // Месяцы в JavaScript начинаются с 0\n    const hours = String(date.getHours()).padStart(2, '0');\n    const minutes = String(date.getMinutes()).padStart(2, '0');\n\n    // Формируем строку в нужном формате\n    return `${day}.${month} в ${hours}:${minutes}`;\n  }\n  return !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"CardOut\",\n    style: {\n      backgroundColor: confirm ? 'green' : 'red',\n      order: -order\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"\\u0418\\u043C\\u044F \\u0443\\u0447\\u0435\\u043D\\u0438\\u043A\\u0430: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          textTransform: 'uppercase'\n        },\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"\\u0412\\u0440\\u0435\\u043C\\u044F \\u0432\\u044B\\u0445\\u043E\\u0434\\u0430: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: formatMessage(msg).timeOut\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        textTransform: 'uppercase',\n        marginTop: '11px',\n        fontWeight: 'bold'\n      },\n      children: formatMessage(msg).confirmOut\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 19\n  }, this);\n}\n_s(CardOut, \"5hQFl3PhahHYTxvWVeDghb09qcs=\");\n_c = CardOut;\nexport default CardOut;\nvar _c;\n$RefreshReg$(_c, \"CardOut\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","CardOut","msg","order","filterText","filteredMessages","_s","timer","setTimer","confirm","setConfirm","currentTime","setCurrentTime","Number","Date","now","loading","setLoading","name","setName","timeOut","setTimeOut","parseDataStudent","message","dateOut","split","length","childName","count","setCount","isRunning","setIsRunning","interval","setInterval","prevCount","console","log","clearInterval","formatMessage","formatDateTime","dateNow","confirmOut","dateTimeString","date","day","String","getDate","padStart","month","getMonth","hours","getHours","minutes","getMinutes","className","style","backgroundColor","children","textTransform","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","fontWeight","_c","$RefreshReg$"],"sources":["C:/Users/kir/WebstormProjects/childout/src/components/CardOut.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\n\r\nfunction CardOut({msg, order, filterText, filteredMessages}) {\r\n    const [timer, setTimer] = useState(0);\r\n    const [confirm, setConfirm] = useState(false);\r\n    const [currentTime, setCurrentTime] = useState(Number(Date.now()));\r\n    const [loading, setLoading] = useState();\r\n    const [name, setName] = useState(\"\");\r\n    const [timeOut, setTimeOut] = useState(Number(Date.now()));\r\n\r\n    function parseDataStudent(message){\r\n\r\n        const dateOut = Number(new Date(message.split(' ')[message.split(' ').length-1]))\r\n        const childName = message.split(' ')[0] +' '+ message.split(' ')[1];\r\n        setName(childName)\r\n\r\n        setTimeOut(dateOut)\r\n        if (currentTime > dateOut) {\r\n            setConfirm(true);}\r\n        else\r\n            setConfirm(false);\r\n        setLoading(false)\r\n    }\r\n    const [count, setCount] = useState(0);\r\n    const [isRunning, setIsRunning] = useState(true);\r\n\r\n    useEffect(() => {\r\n        let interval;\r\n\r\n        if (isRunning) {\r\n            // Устанавливаем интервал для обновления компонента каждую секунду\r\n            interval = setInterval(() => {\r\n                setCount(prevCount => prevCount + 1);\r\n                console.log(count);\r\n            }, 1000);\r\n        }\r\n\r\n        // Очистка интервала при размонтировании или изменении isRunning\r\n        return () => {\r\n            if (interval) {\r\n                clearInterval(interval);\r\n            }\r\n        };\r\n    }, [isRunning]); // Используем isRunning как зависимость\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        parseDataStudent(msg)\r\n    }, [msg, filterText]);\r\n\r\n\r\n\r\n    function formatMessage(message){\r\n        const childName = message.split(' ')[0] +' '+ message.split(' ')[1];\r\n        const timeOut = formatDateTime(message.split(' ')[message.split(' ').length-1])\r\n        const dateOut = Number(new Date(message.split(' ')[message.split(' ').length-1]))\r\n        const dateNow = Date.now()\r\n        return {name:childName, timeOut:timeOut, confirmOut:dateOut <= dateNow?'Выход разрешен':'Выход запрещен'};\r\n    }\r\n\r\n    function formatDateTime(dateTimeString) {\r\n        // Создаем объект даты из строки\r\n        const date = new Date(dateTimeString);\r\n\r\n        // Извлекаем необходимые компоненты даты и времени\r\n        const day = String(date.getDate()).padStart(2, '0');\r\n        const month = String(date.getMonth() + 1).padStart(2, '0'); // Месяцы в JavaScript начинаются с 0\r\n        const hours = String(date.getHours()).padStart(2, '0');\r\n        const minutes = String(date.getMinutes()).padStart(2, '0');\r\n\r\n        // Формируем строку в нужном формате\r\n        return `${day}.${month} в ${hours}:${minutes}`;\r\n    }\r\n    return(\r\n        !loading&&<div className=\"CardOut\" style={{backgroundColor:confirm?'green':'red', order:-order}}>\r\n                <h4>Имя ученика: <span style={{textTransform:'uppercase'}}>{name}</span></h4>\r\n                <h4>Время выхода: <span>{formatMessage(msg).timeOut}</span></h4>\r\n                <span style={{textTransform:'uppercase', marginTop:'11px', fontWeight:'bold'}}>{formatMessage(msg).confirmOut}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardOut;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}