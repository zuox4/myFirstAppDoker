{"ast":null,"code":"// serviceWorkerRegistration.js\n\n// This optional code is used to register a service worker.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(window.location.hostname === 'http://91.77.160.177' || window.location.hostname === '[::1]' || window.location.hostname.match(new RegExp('^127(?:\\\\.[0-255]{1,3}){0,3}')));\nconst register = config => {\n  if ('serviceWorker' in navigator) {\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      return;\n    }\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl, config);\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service ' + 'worker. To learn more, visit https://bit.ly/CRA-PWA');\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n};\nconst registerValidSW = (swUrl, config) => {\n  navigator.serviceWorker.register(swUrl).then(registration => {\n    registration.onupdatefound = () => {\n      const installingWorker = registration.installing;\n      if (installingWorker == null) {\n        return;\n      }\n      installingWorker.onstatechange = () => {\n        if (installingWorker.state === 'installed') {\n          if (navigator.serviceWorker.controller) {\n            console.log('New content is available; please refresh.');\n          } else {\n            console.log('Content is cached for offline use.');\n          }\n        }\n      };\n    };\n  }).catch(error => {\n    console.error('Error during service worker registration:', error);\n  });\n};\nconst checkValidServiceWorker = (swUrl, config) => {\n  fetch(swUrl, {\n    headers: {\n      'Service-Worker': 'script'\n    }\n  }).then(response => {\n    const contentType = response.headers.get('content-type');\n    if (response.status === 404 || contentType != null && contentType.indexOf('javascript') === -1) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      registerValidSW(swUrl, config);\n    }\n  }).catch(() => {\n    console.log('No internet connection found. App is running in offline mode.');\n  });\n};\nexport { register };","map":{"version":3,"names":["isLocalhost","Boolean","window","location","hostname","match","RegExp","register","config","navigator","publicUrl","URL","process","env","PUBLIC_URL","origin","addEventListener","swUrl","checkValidServiceWorker","serviceWorker","ready","then","console","log","registerValidSW","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","catch","error","fetch","headers","response","contentType","get","status","indexOf","unregister","reload"],"sources":["C:/Users/kir/WebstormProjects/childout/src/serviceWorkerRegistration.js"],"sourcesContent":["// serviceWorkerRegistration.js\r\n\r\n// This optional code is used to register a service worker.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'http://91.77.160.177' ||\r\n    window.location.hostname === '[::1]' ||\r\n    window.location.hostname.match(\r\n        new RegExp('^127(?:\\\\.[0-255]{1,3}){0,3}')\r\n    )\r\n);\r\n\r\nconst register = (config) => {\r\n    if ('serviceWorker' in navigator) {\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                checkValidServiceWorker(swUrl, config);\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nconst registerValidSW = (swUrl, config) => {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            console.log(\r\n                                'New content is available; please refresh.'\r\n                            );\r\n                        } else {\r\n                            console.log('Content is cached for offline use.');\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n};\r\n\r\nconst checkValidServiceWorker = (swUrl, config) => {\r\n    fetch(swUrl, {\r\n        headers: { 'Service-Worker': 'script' },\r\n    })\r\n        .then(response => {\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n};\r\n\r\nexport { register };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}