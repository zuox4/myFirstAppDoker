{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kir\\\\WebstormProjects\\\\childout\\\\src\\\\components\\\\CardOut.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CardOut({\n  msg\n}) {\n  _s();\n  const [timer, setTimer] = useState(0);\n  const [confirm, setConfirm] = useState(false);\n  const [currentTime, setCurrentTime] = useState(Date.now());\n  useEffect(() => {\n    // Функция для обновления времени каждую секунду\n    const intervalId = setInterval(() => {\n      const now = Number(new Date());\n      setCurrentTime(now);\n      console.log('Заданное' + new Date(msg.split(' ')[msg.split(' ').length - 1]));\n      console.log('Сейчас' + now);\n      console.log('Проверка');\n      if (now > Number(new Date(msg.split(' ')[msg.split(' ').length - 1]))) {\n        setConfirm(true);\n        clearInterval(intervalId); // Останавливаем интервал после достижения времени\n      }\n    }, 1000);\n    return () => clearInterval(intervalId); // Очищаем интервал при размонтировании компонента\n  }, []);\n  function formatMessage(message) {\n    const childName = message.split(' ')[0] + ' ' + message.split(' ')[1];\n    const timeOut = formatDateTime(message.split(' ')[message.split(' ').length - 1]);\n    const dateOut = Number(new Date(message.split(' ')[message.split(' ').length - 1]));\n    const dateNow = Date.now();\n    return {\n      name: childName,\n      timeOut: timeOut,\n      confirmOut: dateOut <= dateNow ? 'Выход разрешен' : 'Выход запрещен'\n    };\n  }\n  function formatDateTime(dateTimeString) {\n    // Создаем объект даты из строки\n    const date = new Date(dateTimeString);\n\n    // Извлекаем необходимые компоненты даты и времени\n    const day = String(date.getDate()).padStart(2, '0');\n    const month = String(date.getMonth() + 1).padStart(2, '0'); // Месяцы в JavaScript начинаются с 0\n    const hours = String(date.getHours()).padStart(2, '0');\n    const minutes = String(date.getMinutes()).padStart(2, '0');\n\n    // Формируем строку в нужном формате\n    return `${day}.${month} в ${hours}:${minutes}`;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"CardOut\",\n    style: {\n      backgroundColor: confirm ? 'green' : 'red'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"\\u0418\\u043C\\u044F \\u0443\\u0447\\u0435\\u043D\\u0438\\u043A\\u0430: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: formatMessage(msg).name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"\\u0412\\u0440\\u0435\\u043C\\u044F \\u0432\\u044B\\u0445\\u043E\\u0434\\u0430: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: formatMessage(msg).timeOut\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: formatMessage(msg).confirmOut\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(CardOut, \"pCeMTQSYs7PB5TXEO9t/WoGbvnM=\");\n_c = CardOut;\nexport default CardOut;\nvar _c;\n$RefreshReg$(_c, \"CardOut\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","CardOut","msg","_s","timer","setTimer","confirm","setConfirm","currentTime","setCurrentTime","Date","now","intervalId","setInterval","Number","console","log","split","length","clearInterval","formatMessage","message","childName","timeOut","formatDateTime","dateOut","dateNow","name","confirmOut","dateTimeString","date","day","String","getDate","padStart","month","getMonth","hours","getHours","minutes","getMinutes","className","style","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kir/WebstormProjects/childout/src/components/CardOut.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\n\r\nfunction CardOut({msg}) {\r\n    const [timer, setTimer] = useState(0);\r\n    const [confirm, setConfirm] = useState(false);\r\n    const [currentTime, setCurrentTime] = useState(Date.now());\r\n\r\n    useEffect(() => {\r\n        // Функция для обновления времени каждую секунду\r\n        const intervalId = setInterval(() => {\r\n            const now = Number(new Date())\r\n            setCurrentTime(now)\r\n            console.log('Заданное'+new Date(msg.split(' ')[msg.split(' ').length-1]))\r\n            console.log('Сейчас'+now)\r\n            console.log('Проверка')\r\n            if (now > Number(new Date(msg.split(' ')[msg.split(' ').length-1]))) {\r\n                setConfirm(true);\r\n                clearInterval(intervalId); // Останавливаем интервал после достижения времени\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(intervalId); // Очищаем интервал при размонтировании компонента\r\n    }, []);\r\n\r\n\r\n    function formatMessage(message){\r\n        const childName = message.split(' ')[0] +' '+ message.split(' ')[1];\r\n        const timeOut = formatDateTime(message.split(' ')[message.split(' ').length-1])\r\n        const dateOut = Number(new Date(message.split(' ')[message.split(' ').length-1]))\r\n        const dateNow = Date.now()\r\n        return {name:childName, timeOut:timeOut, confirmOut:dateOut <= dateNow?'Выход разрешен':'Выход запрещен'};\r\n    }\r\n\r\n    function formatDateTime(dateTimeString) {\r\n        // Создаем объект даты из строки\r\n        const date = new Date(dateTimeString);\r\n\r\n        // Извлекаем необходимые компоненты даты и времени\r\n        const day = String(date.getDate()).padStart(2, '0');\r\n        const month = String(date.getMonth() + 1).padStart(2, '0'); // Месяцы в JavaScript начинаются с 0\r\n        const hours = String(date.getHours()).padStart(2, '0');\r\n        const minutes = String(date.getMinutes()).padStart(2, '0');\r\n\r\n        // Формируем строку в нужном формате\r\n        return `${day}.${month} в ${hours}:${minutes}`;\r\n    }\r\n    return(\r\n        <div className=\"CardOut\" style={{backgroundColor:confirm?'green':'red'}}>\r\n                <h4>Имя ученика: <span>{formatMessage(msg).name}</span></h4>\r\n                <h4>Время выхода: <span>{formatMessage(msg).timeOut}</span></h4>\r\n                <h4><span>{formatMessage(msg).confirmOut}</span></h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardOut;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}