{"ast":null,"code":"import'./ModalWindow.css';import{useEffect,useState}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ShowModalWindow(_ref){let{isOpen,setModal,fullName,setMessage,sendMessage,setActiveChildCard,setDateOut,className}=_ref;const[dateTime,setDateTime]=useState(Date.now());function getLocalFormattedDateTime(){const now=new Date();const year=now.getFullYear();const month=String(now.getMonth()+1).padStart(2,'0');// Добавляем 1, так как месяцы в JS начинаются с 0\nconst day=String(now.getDate()).padStart(2,'0');const hours=String(now.getHours()).padStart(2,'0');const minutes=String(now.getMinutes()).padStart(2,'0');return`${year}-${month}-${day}T${hours}:${minutes}`;}useEffect(()=>{console.log(dateTime);setDateOut(dateTime);},[dateTime]);function sendDataToServer(){sendMessage();setModal(false);setActiveChildCard(prevCard=>({...prevCard,fullName:''}));}useEffect(()=>{setDateTime(getLocalFormattedDateTime());},[]);useEffect(()=>{// Обновляем локальное сообщение, чтобы избежать бесконечного цикла\nconst newMessage=fullName+' в '+dateTime+' '+className;console.log(newMessage);setMessage(newMessage);// Обновляем сообщение только если оно изменилось\nif(setMessage){setMessage(newMessage);}},[dateTime,fullName,setMessage]);return/*#__PURE__*/_jsx(\"div\",{className:isOpen?\"modal-window\":\"modal-window close\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-window-body\",onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsx(\"div\",{className:\"modal-window-header\",children:\"\\u041F\\u0440\\u043E\\u043F\\u0443\\u0441\\u043A \\u043D\\u0430 \\u0432\\u044B\\u0445\\u043E\\u0434\"}),/*#__PURE__*/_jsx(\"div\",{className:\"name\",children:fullName}),/*#__PURE__*/_jsx(\"input\",{type:'datetime-local',value:dateTime,onChange:e=>setDateTime(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>sendDataToServer(),children:\"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u044C\"}),/*#__PURE__*/_jsx(\"div\",{onClick:()=>setModal(false),style:{color:\"white\",textDecoration:'underline'},children:\"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\"})]})});}export default ShowModalWindow;","map":{"version":3,"names":["useEffect","useState","jsx","_jsx","jsxs","_jsxs","ShowModalWindow","_ref","isOpen","setModal","fullName","setMessage","sendMessage","setActiveChildCard","setDateOut","className","dateTime","setDateTime","Date","now","getLocalFormattedDateTime","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","console","log","sendDataToServer","prevCard","newMessage","children","onClick","e","stopPropagation","type","value","onChange","target","style","color","textDecoration"],"sources":["C:/Users/kir/WebstormProjects/childout/src/components/ModalWindow.js"],"sourcesContent":["import './ModalWindow.css'\r\nimport {useEffect, useState} from \"react\";\r\n\r\nfunction ShowModalWindow({isOpen, setModal, fullName, setMessage, sendMessage, setActiveChildCard, setDateOut, className}) {\r\n    const [dateTime, setDateTime] = useState(Date.now())\r\n    function getLocalFormattedDateTime() {\r\n        const now = new Date();\r\n        const year = now.getFullYear();\r\n        const month = String(now.getMonth() + 1).padStart(2, '0'); // Добавляем 1, так как месяцы в JS начинаются с 0\r\n        const day = String(now.getDate()).padStart(2, '0');\r\n        const hours = String(now.getHours()).padStart(2, '0');\r\n        const minutes = String(now.getMinutes()).padStart(2, '0');\r\n        return `${year}-${month}-${day}T${hours}:${minutes}`;\r\n    }\r\n    useEffect(()=>{\r\n        console.log(dateTime)\r\n        setDateOut(dateTime)\r\n    }, [dateTime])\r\n    function sendDataToServer() {\r\n        sendMessage()\r\n        setModal(false)\r\n        setActiveChildCard(prevCard => ({...prevCard, fullName:''}))\r\n    }\r\n    useEffect(() => {\r\n        setDateTime(getLocalFormattedDateTime())\r\n    }, []);\r\n    useEffect(() => {\r\n        // Обновляем локальное сообщение, чтобы избежать бесконечного цикла\r\n        const newMessage = fullName + ' в ' + dateTime + ' ' + className;\r\n        console.log(newMessage)\r\n        setMessage(newMessage);\r\n       // Обновляем сообщение только если оно изменилось\r\n        if (setMessage) {\r\n            setMessage(newMessage);\r\n        }\r\n    }, [dateTime, fullName, setMessage]);\r\n\r\n    return(\r\n        <div className={isOpen?\"modal-window\":\"modal-window close\"}>\r\n            <div className=\"modal-window-body\" onClick={(e)=>e.stopPropagation()}>\r\n                <div className=\"modal-window-header\">Пропуск на выход</div>\r\n\r\n                    <div className={\"name\"}>{fullName}</div>\r\n                    <input type={'datetime-local'} value={dateTime} onChange={(e)=>setDateTime(e.target.value)}/>\r\n                    <button onClick={()=>sendDataToServer()}>Подтвердить</button>\r\n                    <div onClick={()=>setModal(false)} style={{color:\"white\", textDecoration:'underline'}}>Закрыть</div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ShowModalWindow;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}