{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kir\\\\WebstormProjects\\\\childout\\\\src\\\\components\\\\ListChildCard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport ChildCard from \"./ChildCard\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ListChildCard({\n  setModal,\n  isOpen,\n  setActiveChildCard,\n  activeChildCardName\n}) {\n  _s();\n  const listChildCard = [{\n    id: 0,\n    fullName: \"Авдеева Юлия\",\n    numberPhone: '89850638581',\n    photoSrc: ''\n  }, {\n    id: 0,\n    full_name: \"Авдеева Юлия\",\n    numberPhone: '89850638581',\n    photoSrc: ''\n  }, {\n    id: 1,\n    fullName: \"Аракчеев Артем\",\n    numberPhone: '89850638581',\n    photoSrc: ''\n  }, {\n    id: 2,\n    fullName: \"Найдюк Антон\",\n    numberPhone: '89850638581',\n    photoSrc: ''\n  }, {\n    id: 3,\n    fullName: \"Михайлов Глеб\",\n    numberPhone: '89850638581',\n    photoSrc: ''\n  }];\n  const [childCards, setChildCards] = useState(listChildCard);\n  async function getStudentsByTeacher(teacherId) {\n    try {\n      // Выполним GET-запрос к вашему серверу Flask\n      const response = await axios.get(`http://192.168.1.7:4001/students_by_teacher/${teacherId}`);\n\n      // Обработка полученных данных\n      const students = response.data.students;\n\n      // Например, выводим данные в консоль\n      console.log(\"Список студентов:\", students);\n      setChildCards(students);\n      // Здесь можно добавить дополнительную логику обработки\n      // Например, обновление состояния в React, если вы используете его\n      return students; // Возвращаем список студентов\n    } catch (error) {\n      // Обработка ошибок запроса\n      console.error(\"Ошибка при получении данных:\", error);\n      // Можно также обработать конкретно, если нет данных или произошла ошибка\n      if (error.response) {\n        // Сервер ответил с кодом состояния, отличным от 2xx\n        console.error(\"Ошибка сервера:\", error.response.data);\n      } else if (error.request) {\n        // Запрос был сделан, но ответа не было\n        console.error(\"Нет ответа от сервера:\", error.request);\n      } else {\n        // Произошла ошибка при настройке запроса\n        console.error(\"Ошибка:\", error.message);\n      }\n    }\n  }\n  useEffect(() => {\n    getStudentsByTeacher(1);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ListChildCard\",\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center',\n        marginTop: '10px',\n        color: 'white',\n        fontSize: '25px'\n      },\n      children: \"\\u041C\\u043E\\u0439 \\u043A\\u043B\\u0430\\u0441\\u0441\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '200px',\n        backgroundColor: 'white',\n        height: '2px',\n        marginBottom: '10px',\n        marginTop: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), childCards.map((childCard, index) => /*#__PURE__*/_jsxDEV(ChildCard, {\n      childCard: childCard,\n      activeChildCardName: activeChildCardName,\n      setModal: setModal,\n      isOpen: isOpen,\n      setActiveChildCard: setActiveChildCard\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(ListChildCard, \"/Y17rHM8f2CovZWBGCJVXAXsuYM=\");\n_c = ListChildCard;\nexport default ListChildCard;\nvar _c;\n$RefreshReg$(_c, \"ListChildCard\");","map":{"version":3,"names":["React","useEffect","useState","ChildCard","axios","jsxDEV","_jsxDEV","ListChildCard","setModal","isOpen","setActiveChildCard","activeChildCardName","_s","listChildCard","id","fullName","numberPhone","photoSrc","full_name","childCards","setChildCards","getStudentsByTeacher","teacherId","response","get","students","data","console","log","error","request","message","className","style","display","flexDirection","alignItems","children","textAlign","marginTop","color","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","width","backgroundColor","height","marginBottom","map","childCard","index","_c","$RefreshReg$"],"sources":["C:/Users/kir/WebstormProjects/childout/src/components/ListChildCard.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport ChildCard from \"./ChildCard\";\r\nimport axios from \"axios\";\r\n\r\nfunction ListChildCard({setModal, isOpen, setActiveChildCard, activeChildCardName}) {\r\n    const listChildCard = [{id: 0, fullName:\"Авдеева Юлия\", numberPhone: '89850638581', photoSrc:''},\r\n        {id: 0, full_name:\"Авдеева Юлия\", numberPhone: '89850638581', photoSrc:''},\r\n        {id: 1, fullName:\"Аракчеев Артем\", numberPhone: '89850638581', photoSrc:''},\r\n        {id: 2, fullName:\"Найдюк Антон\", numberPhone: '89850638581', photoSrc:''},\r\n        {id: 3, fullName:\"Михайлов Глеб\", numberPhone: '89850638581', photoSrc:''},]\r\n    const [childCards, setChildCards] = useState(listChildCard);\r\n\r\n    async function getStudentsByTeacher(teacherId) {\r\n        try {\r\n            // Выполним GET-запрос к вашему серверу Flask\r\n            const response = await axios.get(`http://192.168.1.7:4001/students_by_teacher/${teacherId}`);\r\n\r\n            // Обработка полученных данных\r\n            const students = response.data.students;\r\n\r\n            // Например, выводим данные в консоль\r\n            console.log(\"Список студентов:\", students);\r\n            setChildCards(students)\r\n            // Здесь можно добавить дополнительную логику обработки\r\n            // Например, обновление состояния в React, если вы используете его\r\n            return students;  // Возвращаем список студентов\r\n\r\n        } catch (error) {\r\n            // Обработка ошибок запроса\r\n            console.error(\"Ошибка при получении данных:\", error);\r\n            // Можно также обработать конкретно, если нет данных или произошла ошибка\r\n            if (error.response) {\r\n                // Сервер ответил с кодом состояния, отличным от 2xx\r\n                console.error(\"Ошибка сервера:\", error.response.data);\r\n            } else if (error.request) {\r\n                // Запрос был сделан, но ответа не было\r\n                console.error(\"Нет ответа от сервера:\", error.request);\r\n            } else {\r\n                // Произошла ошибка при настройке запроса\r\n                console.error(\"Ошибка:\", error.message);\r\n            }\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getStudentsByTeacher(1)\r\n    }, []);\r\n    return(\r\n        <div className=\"ListChildCard\" style={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\r\n            <h1 style={{textAlign: 'center', marginTop:'10px', color:'white', fontSize:'25px'}}>Мой класс</h1>\r\n            <div style={{width:'200px', backgroundColor:'white', height:'2px', marginBottom:'10px', marginTop:'10px'}}></div>\r\n            {childCards.map((childCard, index) => (\r\n                <ChildCard key={index} childCard={childCard} activeChildCardName={activeChildCardName}\r\n                           setModal={setModal} isOpen={isOpen} setActiveChildCard={setActiveChildCard}/>))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListChildCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}