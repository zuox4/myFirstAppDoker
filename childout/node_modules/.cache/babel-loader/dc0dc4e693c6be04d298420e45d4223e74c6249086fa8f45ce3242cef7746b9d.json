{"ast":null,"code":"const CACHE_NAME = 'v1';\nconst URLs_TO_CACHE = ['/', '/index.html', '/manifest.json', '/icon-192x192.png',\n// Добавьте свои файлы иконок\n'/icon-512x512.png'\n// здесь вы можете добавить другие статические файлы\n];\n\n// Установка сервисного работника\nself.addEventListener('install', event => {\n  event.waitUntil(caches.open(CACHE_NAME).then(cache => {\n    return cache.addAll(URLs_TO_CACHE);\n  }));\n});\n\n// Событие fetch для извлечения ресурсов из кэша\nself.addEventListener('fetch', event => {\n  event.respondWith(caches.match(event.request).then(response => {\n    return response || fetch(event.request);\n  }));\n});\n\n// Обновление кэша\nself.addEventListener('activate', event => {\n  const cacheWhitelist = [CACHE_NAME];\n  event.waitUntil(caches.keys().then(cacheNames => {\n    return Promise.all(cacheNames.map(cacheName => {\n      if (cacheWhitelist.indexOf(cacheName) === -1) {\n        return caches.delete(cacheName);\n      }\n    }));\n  }));\n});","map":{"version":3,"names":["CACHE_NAME","URLs_TO_CACHE","self","addEventListener","event","waitUntil","caches","open","then","cache","addAll","respondWith","match","request","response","fetch","cacheWhitelist","keys","cacheNames","Promise","all","map","cacheName","indexOf","delete"],"sources":["C:/Users/kir/WebstormProjects/childout/src/service-worker.js"],"sourcesContent":["const CACHE_NAME = 'v1';\r\nconst URLs_TO_CACHE = [\r\n    '/',\r\n    '/index.html',\r\n    '/manifest.json',\r\n    '/icon-192x192.png', // Добавьте свои файлы иконок\r\n    '/icon-512x512.png',\r\n    // здесь вы можете добавить другие статические файлы\r\n];\r\n\r\n// Установка сервисного работника\r\nself.addEventListener('install', (event) => {\r\n    event.waitUntil(\r\n        caches.open(CACHE_NAME)\r\n            .then((cache) => {\r\n                return cache.addAll(URLs_TO_CACHE);\r\n            })\r\n    );\r\n});\r\n\r\n// Событие fetch для извлечения ресурсов из кэша\r\nself.addEventListener('fetch', (event) => {\r\n    event.respondWith(\r\n        caches.match(event.request)\r\n            .then((response) => {\r\n                return response || fetch(event.request);\r\n            })\r\n    );\r\n});\r\n\r\n// Обновление кэша\r\nself.addEventListener('activate', (event) => {\r\n    const cacheWhitelist = [CACHE_NAME];\r\n    event.waitUntil(\r\n        caches.keys().then((cacheNames) => {\r\n            return Promise.all(\r\n                cacheNames.map((cacheName) => {\r\n                    if (cacheWhitelist.indexOf(cacheName) === -1) {\r\n                        return caches.delete(cacheName);\r\n                    }\r\n                })\r\n            );\r\n        })\r\n    );\r\n});"],"mappings":"AAAA,MAAMA,UAAU,GAAG,IAAI;AACvB,MAAMC,aAAa,GAAG,CAClB,GAAG,EACH,aAAa,EACb,gBAAgB,EAChB,mBAAmB;AAAE;AACrB;AACA;AAAA,CACH;;AAED;AACAC,IAAI,CAACC,gBAAgB,CAAC,SAAS,EAAGC,KAAK,IAAK;EACxCA,KAAK,CAACC,SAAS,CACXC,MAAM,CAACC,IAAI,CAACP,UAAU,CAAC,CAClBQ,IAAI,CAAEC,KAAK,IAAK;IACb,OAAOA,KAAK,CAACC,MAAM,CAACT,aAAa,CAAC;EACtC,CAAC,CACT,CAAC;AACL,CAAC,CAAC;;AAEF;AACAC,IAAI,CAACC,gBAAgB,CAAC,OAAO,EAAGC,KAAK,IAAK;EACtCA,KAAK,CAACO,WAAW,CACbL,MAAM,CAACM,KAAK,CAACR,KAAK,CAACS,OAAO,CAAC,CACtBL,IAAI,CAAEM,QAAQ,IAAK;IAChB,OAAOA,QAAQ,IAAIC,KAAK,CAACX,KAAK,CAACS,OAAO,CAAC;EAC3C,CAAC,CACT,CAAC;AACL,CAAC,CAAC;;AAEF;AACAX,IAAI,CAACC,gBAAgB,CAAC,UAAU,EAAGC,KAAK,IAAK;EACzC,MAAMY,cAAc,GAAG,CAAChB,UAAU,CAAC;EACnCI,KAAK,CAACC,SAAS,CACXC,MAAM,CAACW,IAAI,CAAC,CAAC,CAACT,IAAI,CAAEU,UAAU,IAAK;IAC/B,OAAOC,OAAO,CAACC,GAAG,CACdF,UAAU,CAACG,GAAG,CAAEC,SAAS,IAAK;MAC1B,IAAIN,cAAc,CAACO,OAAO,CAACD,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE;QAC1C,OAAOhB,MAAM,CAACkB,MAAM,CAACF,SAAS,CAAC;MACnC;IACJ,CAAC,CACL,CAAC;EACL,CAAC,CACL,CAAC;AACL,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}