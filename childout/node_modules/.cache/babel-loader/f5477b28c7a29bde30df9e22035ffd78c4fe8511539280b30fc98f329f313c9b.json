{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kir\\\\WebstormProjects\\\\childout\\\\src\\\\components\\\\CardOut.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CardOut({\n  msg,\n  order\n}) {\n  _s();\n  const [timer, setTimer] = useState(0);\n  const [confirm, setConfirm] = useState(false);\n  const [currentTime, setCurrentTime] = useState(Number(Date.now()));\n  const [loading, setLoading] = useState(false);\n  const now = Number(new Date());\n  function checkConfirm() {\n    if (now > Number(new Date(msg.split(' ')[msg.split(' ').length - 1]))) {\n      setConfirm(true);\n      // Останавливаем интервал после достижения времени\n    }\n  }\n  useEffect(() => {\n    // Функция для обновления времени каждую секунду\n    const intervalId = setInterval(() => {\n      clearInterval(intervalId);\n      setCurrentTime(now);\n      console.log('Проверка');\n    }, 1000);\n    return () => clearInterval(intervalId); // Очищаем интервал при размонтировании компонента\n  }, []);\n  function formatMessage(message) {\n    const childName = message.split(' ')[0] + ' ' + message.split(' ')[1];\n    const timeOut = formatDateTime(message.split(' ')[message.split(' ').length - 1]);\n    const dateOut = Number(new Date(message.split(' ')[message.split(' ').length - 1]));\n    const dateNow = Date.now();\n    return {\n      name: childName,\n      timeOut: timeOut,\n      confirmOut: dateOut <= dateNow ? 'Выход разрешен' : 'Выход запрещен'\n    };\n  }\n  function formatDateTime(dateTimeString) {\n    // Создаем объект даты из строки\n    const date = new Date(dateTimeString);\n\n    // Извлекаем необходимые компоненты даты и времени\n    const day = String(date.getDate()).padStart(2, '0');\n    const month = String(date.getMonth() + 1).padStart(2, '0'); // Месяцы в JavaScript начинаются с 0\n    const hours = String(date.getHours()).padStart(2, '0');\n    const minutes = String(date.getMinutes()).padStart(2, '0');\n\n    // Формируем строку в нужном формате\n    return `${day}.${month} в ${hours}:${minutes}`;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"CardOut\",\n    style: {\n      backgroundColor: confirm ? 'green' : 'red',\n      order: -order\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"\\u0418\\u043C\\u044F \\u0443\\u0447\\u0435\\u043D\\u0438\\u043A\\u0430: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          textTransform: 'uppercase'\n        },\n        children: formatMessage(msg).name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"\\u0412\\u0440\\u0435\\u043C\\u044F \\u0432\\u044B\\u0445\\u043E\\u0434\\u0430: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: formatMessage(msg).timeOut\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        textTransform: 'uppercase',\n        marginTop: '11px',\n        fontWeight: 'bold'\n      },\n      children: formatMessage(msg).confirmOut\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(CardOut, \"uTyDbOu0d9oe6WuUs/3VHfnut0w=\");\n_c = CardOut;\nexport default CardOut;\nvar _c;\n$RefreshReg$(_c, \"CardOut\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","CardOut","msg","order","_s","timer","setTimer","confirm","setConfirm","currentTime","setCurrentTime","Number","Date","now","loading","setLoading","checkConfirm","split","length","intervalId","setInterval","clearInterval","console","log","formatMessage","message","childName","timeOut","formatDateTime","dateOut","dateNow","name","confirmOut","dateTimeString","date","day","String","getDate","padStart","month","getMonth","hours","getHours","minutes","getMinutes","className","style","backgroundColor","children","textTransform","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","fontWeight","_c","$RefreshReg$"],"sources":["C:/Users/kir/WebstormProjects/childout/src/components/CardOut.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\n\r\nfunction CardOut({msg, order}) {\r\n    const [timer, setTimer] = useState(0);\r\n    const [confirm, setConfirm] = useState(false);\r\n    const [currentTime, setCurrentTime] = useState(Number(Date.now()));\r\n    const [loading, setLoading] = useState(false);\r\n    const now = Number(new Date())\r\n\r\n    function checkConfirm(){\r\n\r\n        if (now > Number(new Date(msg.split(' ')[msg.split(' ').length-1]))) {\r\n            setConfirm(true);\r\n             // Останавливаем интервал после достижения времени\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        // Функция для обновления времени каждую секунду\r\n        const intervalId = setInterval(() => {\r\n            clearInterval(intervalId);\r\n            setCurrentTime(now)\r\n            console.log('Проверка')\r\n\r\n        }, 1000);\r\n\r\n        return () => clearInterval(intervalId); // Очищаем интервал при размонтировании компонента\r\n    }, []);\r\n\r\n\r\n    function formatMessage(message){\r\n        const childName = message.split(' ')[0] +' '+ message.split(' ')[1];\r\n        const timeOut = formatDateTime(message.split(' ')[message.split(' ').length-1])\r\n        const dateOut = Number(new Date(message.split(' ')[message.split(' ').length-1]))\r\n        const dateNow = Date.now()\r\n        return {name:childName, timeOut:timeOut, confirmOut:dateOut <= dateNow?'Выход разрешен':'Выход запрещен'};\r\n    }\r\n\r\n    function formatDateTime(dateTimeString) {\r\n        // Создаем объект даты из строки\r\n        const date = new Date(dateTimeString);\r\n\r\n        // Извлекаем необходимые компоненты даты и времени\r\n        const day = String(date.getDate()).padStart(2, '0');\r\n        const month = String(date.getMonth() + 1).padStart(2, '0'); // Месяцы в JavaScript начинаются с 0\r\n        const hours = String(date.getHours()).padStart(2, '0');\r\n        const minutes = String(date.getMinutes()).padStart(2, '0');\r\n\r\n        // Формируем строку в нужном формате\r\n        return `${day}.${month} в ${hours}:${minutes}`;\r\n    }\r\n    return(\r\n        <div className=\"CardOut\" style={{backgroundColor:confirm?'green':'red', order:-order}}>\r\n                <h4>Имя ученика: <span style={{textTransform:'uppercase'}}>{formatMessage(msg).name}</span></h4>\r\n                <h4>Время выхода: <span>{formatMessage(msg).timeOut}</span></h4>\r\n                <span style={{textTransform:'uppercase', marginTop:'11px', fontWeight:'bold'}}>{formatMessage(msg).confirmOut}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardOut;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}