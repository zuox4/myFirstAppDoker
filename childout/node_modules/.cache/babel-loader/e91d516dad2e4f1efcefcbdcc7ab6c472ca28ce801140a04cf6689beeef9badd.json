{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kir\\\\WebstormProjects\\\\childout\\\\src\\\\components\\\\CardOut.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CardOut({\n  msg,\n  order,\n  filterText,\n  filteredMessages\n}) {\n  _s();\n  const [timer, setTimer] = useState(0);\n  const [confirm, setConfirm] = useState(false);\n  const [currentTime, setCurrentTime] = useState(Number(Date.now()));\n  const [loading, setLoading] = useState();\n  const dateOut = Number(new Date(msg.split(' ')[msg.split(' ').length - 1]));\n  const childName = msg.split(' ')[0] + ' ' + msg.split(' ')[1];\n  const [count, setCount] = useState(0);\n  const [isRunning, setIsRunning] = useState(true);\n  useEffect(() => {\n    setLoading(true);\n    if (currentTime > dateOut) {\n      setConfirm(true);\n    } else setConfirm(false);\n    setLoading(false);\n  }, [filterText, filteredMessages]);\n  function formatMessage(message) {\n    const childName = message.split(' ')[0] + ' ' + message.split(' ')[1];\n    const timeOut = formatDateTime(message.split(' ')[message.split(' ').length - 1]);\n    const dateOut = Number(new Date(message.split(' ')[message.split(' ').length - 1]));\n    const dateNow = Date.now();\n    return {\n      name: childName,\n      timeOut: timeOut,\n      confirmOut: dateOut <= dateNow ? 'Выход разрешен' : 'Выход запрещен'\n    };\n  }\n  function formatDateTime(dateTimeString) {\n    // Создаем объект даты из строки\n    const date = new Date(dateTimeString);\n\n    // Извлекаем необходимые компоненты даты и времени\n    const day = String(date.getDate()).padStart(2, '0');\n    const month = String(date.getMonth() + 1).padStart(2, '0'); // Месяцы в JavaScript начинаются с 0\n    const hours = String(date.getHours()).padStart(2, '0');\n    const minutes = String(date.getMinutes()).padStart(2, '0');\n\n    // Формируем строку в нужном формате\n    return `${day}.${month} в ${hours}:${minutes}`;\n  }\n  return !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"CardOut\",\n    style: {\n      backgroundColor: confirm ? 'green' : 'red',\n      order: -order\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"\\u0418\\u043C\\u044F \\u0443\\u0447\\u0435\\u043D\\u0438\\u043A\\u0430: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          textTransform: 'uppercase'\n        },\n        children: childName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"\\u0412\\u0440\\u0435\\u043C\\u044F \\u0432\\u044B\\u0445\\u043E\\u0434\\u0430: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: formatMessage(msg).timeOut\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        textTransform: 'uppercase',\n        marginTop: '11px',\n        fontWeight: 'bold'\n      },\n      children: formatMessage(msg).confirmOut\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 19\n  }, this);\n}\n_s(CardOut, \"QzMInC6rESjtd3frw3yjA6yL1BM=\");\n_c = CardOut;\nexport default CardOut;\nvar _c;\n$RefreshReg$(_c, \"CardOut\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","CardOut","msg","order","filterText","filteredMessages","_s","timer","setTimer","confirm","setConfirm","currentTime","setCurrentTime","Number","Date","now","loading","setLoading","dateOut","split","length","childName","count","setCount","isRunning","setIsRunning","formatMessage","message","timeOut","formatDateTime","dateNow","name","confirmOut","dateTimeString","date","day","String","getDate","padStart","month","getMonth","hours","getHours","minutes","getMinutes","className","style","backgroundColor","children","textTransform","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","fontWeight","_c","$RefreshReg$"],"sources":["C:/Users/kir/WebstormProjects/childout/src/components/CardOut.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\n\r\nfunction CardOut({msg, order, filterText, filteredMessages}) {\r\n    const [timer, setTimer] = useState(0);\r\n    const [confirm, setConfirm] = useState(false);\r\n    const [currentTime, setCurrentTime] = useState(Number(Date.now()));\r\n    const [loading, setLoading] = useState();\r\n    const dateOut = Number(new Date(msg.split(' ')[msg.split(' ').length-1]))\r\n    const childName = msg.split(' ')[0] +' '+ msg.split(' ')[1];\r\n    const [count, setCount] = useState(0);\r\n    const [isRunning, setIsRunning] = useState(true);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        setLoading(true)\r\n        if (currentTime > dateOut) {\r\n            setConfirm(true)\r\n        }\r\n        else setConfirm(false)\r\n        setLoading(false)\r\n\r\n    }, [filterText,filteredMessages]);\r\n\r\n\r\n\r\n    function formatMessage(message){\r\n        const childName = message.split(' ')[0] +' '+ message.split(' ')[1];\r\n        const timeOut = formatDateTime(message.split(' ')[message.split(' ').length-1])\r\n        const dateOut = Number(new Date(message.split(' ')[message.split(' ').length-1]))\r\n        const dateNow = Date.now()\r\n        return {name:childName, timeOut:timeOut, confirmOut:dateOut <= dateNow?'Выход разрешен':'Выход запрещен'};\r\n    }\r\n\r\n    function formatDateTime(dateTimeString) {\r\n        // Создаем объект даты из строки\r\n        const date = new Date(dateTimeString);\r\n\r\n        // Извлекаем необходимые компоненты даты и времени\r\n        const day = String(date.getDate()).padStart(2, '0');\r\n        const month = String(date.getMonth() + 1).padStart(2, '0'); // Месяцы в JavaScript начинаются с 0\r\n        const hours = String(date.getHours()).padStart(2, '0');\r\n        const minutes = String(date.getMinutes()).padStart(2, '0');\r\n\r\n        // Формируем строку в нужном формате\r\n        return `${day}.${month} в ${hours}:${minutes}`;\r\n    }\r\n    return(\r\n        !loading&&<div className=\"CardOut\" style={{backgroundColor:confirm?'green':'red', order:-order}}>\r\n                <h4>Имя ученика: <span style={{textTransform:'uppercase'}}>{childName}</span></h4>\r\n                <h4>Время выхода: <span>{formatMessage(msg).timeOut}</span></h4>\r\n                <span style={{textTransform:'uppercase', marginTop:'11px', fontWeight:'bold'}}>{formatMessage(msg).confirmOut}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardOut;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}