{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import axios from\"axios\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function CardOut(_ref){let{msg,order}=_ref;const[messageData,setMessageData]=useState({});useEffect(()=>{// Инициализация данных при первом рендере\nsetMessageData(formatMessage(msg));// Устанавливаем интервал для обновления данных каждую секунду\nconst interval=setInterval(()=>{setMessageData(formatMessage(msg));},1000);// Очистка интервала при размонтировании компонента\nreturn()=>clearInterval(interval);},[msg]);// Обновляем только если msg изменяется\nfunction parseDate(dateString){// Удаляем 'Z' в конце строки, если он присутствует\nif(dateString.endsWith('Z')){dateString=dateString.slice(0,-1);}const[datePart,timePart]=dateString.split('T');const[year,month,day]=datePart.split('-').map(Number);const[hours,minutes]=timePart.split(':').map(Number);// Возвращаем дату в UTC\nreturn new Date(Date.UTC(year,month-1,day,hours,minutes));}function formatMessage(message){const parts=message.split(' ');const childName=parts[0]+' '+parts[1];const timeString=parts[parts.length-2];const parsedDate=parseDate(timeString);// Парсим дату\nconst dateOut=parsedDate.getTime();const dateNow=Date.now();// Используем Date.now() для получения текущего времени в миллисекундах\nconst className=parts[parts.length-1];// Форматируем сообщение на основе сравнения времени\nreturn{name:childName,timeOut:formatDateTime(parsedDate),// Используем уже распарсенную дату\nconfirmOut:dateOut<=dateNow+3*60*60*1000?'Выход разрешен':'Выход запрещен',className:className};}function formatDateTime(date){const day=String(date.getUTCDate()).padStart(2,'0');const month=String(date.getUTCMonth()+1).padStart(2,'0');const hours=String(date.getUTCHours()).padStart(2,'0');const minutes=String(date.getUTCMinutes()).padStart(2,'0');return`${day}.${month} в ${hours}:${minutes}`;}return/*#__PURE__*/_jsxs(\"div\",{className:\"CardOut\",style:{backgroundColor:messageData.confirmOut===\"Выход разрешен\"?'green':'red',order:-order},children:[/*#__PURE__*/_jsxs(\"h4\",{children:[\"\\u0418\\u043C\\u044F \\u0443\\u0447\\u0435\\u043D\\u0438\\u043A\\u0430: \",/*#__PURE__*/_jsx(\"span\",{style:{textTransform:'uppercase'},children:messageData.name})]}),/*#__PURE__*/_jsxs(\"h4\",{children:[\"\\u041A\\u043B\\u0430\\u0441\\u0441: \",/*#__PURE__*/_jsx(\"span\",{children:messageData.className}),\" \"]}),/*#__PURE__*/_jsxs(\"h4\",{children:[\"\\u0412\\u0440\\u0435\\u043C\\u044F \\u0432\\u044B\\u0445\\u043E\\u0434\\u0430: \",/*#__PURE__*/_jsx(\"span\",{children:messageData.timeOut})]}),/*#__PURE__*/_jsx(\"span\",{style:{textTransform:'uppercase',marginTop:'11px',fontWeight:'bold'},children:messageData.confirmOut})]});}export default CardOut;","map":{"version":3,"names":["React","useEffect","useState","axios","jsx","_jsx","jsxs","_jsxs","CardOut","_ref","msg","order","messageData","setMessageData","formatMessage","interval","setInterval","clearInterval","parseDate","dateString","endsWith","slice","datePart","timePart","split","year","month","day","map","Number","hours","minutes","Date","UTC","message","parts","childName","timeString","length","parsedDate","dateOut","getTime","dateNow","now","className","name","timeOut","formatDateTime","confirmOut","date","String","getUTCDate","padStart","getUTCMonth","getUTCHours","getUTCMinutes","style","backgroundColor","children","textTransform","marginTop","fontWeight"],"sources":["C:/Users/kir/WebstormProjects/childout/src/components/CardOut.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction CardOut({ msg, order }) {\r\n    const [messageData, setMessageData] = useState({});\r\n    useEffect(() => {\r\n        // Инициализация данных при первом рендере\r\n        setMessageData(formatMessage(msg));\r\n\r\n        // Устанавливаем интервал для обновления данных каждую секунду\r\n        const interval = setInterval(() => {\r\n            setMessageData(formatMessage(msg));\r\n        }, 1000);\r\n\r\n        // Очистка интервала при размонтировании компонента\r\n        return () => clearInterval(interval);\r\n    }, [msg]); // Обновляем только если msg изменяется\r\n\r\n    function parseDate(dateString) {\r\n        // Удаляем 'Z' в конце строки, если он присутствует\r\n        if (dateString.endsWith('Z')) {\r\n            dateString = dateString.slice(0, -1);\r\n        }\r\n        const [datePart, timePart] = dateString.split('T');\r\n        const [year, month, day] = datePart.split('-').map(Number);\r\n        const [hours, minutes] = timePart.split(':').map(Number);\r\n\r\n        // Возвращаем дату в UTC\r\n        return new Date(Date.UTC(year, month - 1, day, hours, minutes));\r\n    }\r\n\r\n    function formatMessage(message) {\r\n        const parts = message.split(' ');\r\n        const childName = parts[0] + ' ' + parts[1];\r\n        const timeString = parts[parts.length - 2];\r\n        const parsedDate = parseDate(timeString); // Парсим дату\r\n        const dateOut = parsedDate.getTime();\r\n        const dateNow = Date.now(); // Используем Date.now() для получения текущего времени в миллисекундах\r\n        const className = parts[parts.length - 1];\r\n        // Форматируем сообщение на основе сравнения времени\r\n        return {\r\n            name: childName,\r\n            timeOut: formatDateTime(parsedDate), // Используем уже распарсенную дату\r\n            confirmOut: dateOut <= dateNow + 3 * 60 * 60 * 1000 ? 'Выход разрешен' : 'Выход запрещен',\r\n            className:className\r\n        };\r\n    }\r\n\r\n    function formatDateTime(date) {\r\n        const day = String(date.getUTCDate()).padStart(2, '0');\r\n        const month = String(date.getUTCMonth() + 1).padStart(2, '0');\r\n        const hours = String(date.getUTCHours()).padStart(2, '0');\r\n        const minutes = String(date.getUTCMinutes()).padStart(2, '0');\r\n        return `${day}.${month} в ${hours}:${minutes}`;\r\n    }\r\n\r\n    return (\r\n        <div className=\"CardOut\"\r\n             style={{ backgroundColor: messageData.confirmOut === \"Выход разрешен\" ? 'green' : 'red', order: -order }}>\r\n            <h4>Имя ученика: <span style={{ textTransform: 'uppercase' }}>{messageData.name}</span></h4>\r\n            <h4>Класс: <span>{messageData.className}</span> </h4>\r\n            <h4>Время выхода: <span>{messageData.timeOut}</span></h4>\r\n            <span style={{\r\n                textTransform: 'uppercase',\r\n                marginTop: '11px',\r\n                fontWeight: 'bold'\r\n            }}>{messageData.confirmOut}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardOut;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}