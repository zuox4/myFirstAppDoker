{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kir\\\\WebstormProjects\\\\childout\\\\src\\\\components\\\\ModalWindow.js\",\n  _s = $RefreshSig$();\nimport './ModalWindow.css';\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ShowModalWindow({\n  isOpen,\n  setModal,\n  fullName,\n  setMessage,\n  sendMessage,\n  setActiveChildCard,\n  setDateOut,\n  className\n}) {\n  _s();\n  const [dateTime, setDateTime] = useState(Date.now());\n  function getLocalFormattedDateTime() {\n    const now = new Date();\n    const year = now.getFullYear();\n    const month = String(now.getMonth() + 1).padStart(2, '0'); // Добавляем 1, так как месяцы в JS начинаются с 0\n    const day = String(now.getDate()).padStart(2, '0');\n    const hours = String(now.getHours()).padStart(2, '0');\n    const minutes = String(now.getMinutes()).padStart(2, '0');\n    return `${year}-${month}-${day}T${hours}:${minutes}`;\n  }\n  useEffect(() => {\n    console.log(dateTime);\n    setDateOut(dateTime);\n  }, [dateTime]);\n  function sendDataToServer() {\n    sendMessage();\n    setModal(false);\n    setActiveChildCard(prevCard => ({\n      ...prevCard,\n      fullName: ''\n    }));\n  }\n  useEffect(() => {\n    setDateTime(getLocalFormattedDateTime());\n  }, []);\n  useEffect(() => {\n    // Обновляем локальное сообщение, чтобы избежать бесконечного цикла\n    const newMessage = fullName + ' в ' + dateTime + ' ' + className;\n    console.log(newMessage);\n    setMessage(newMessage);\n    // Обновляем сообщение только если оно изменилось\n    if (setMessage) {\n      setMessage(newMessage);\n    }\n  }, [dateTime, fullName, setMessage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: isOpen ? \"modal-window\" : \"modal-window close\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-window-body\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-window-header\",\n        children: \"\\u041F\\u0440\\u043E\\u043F\\u0443\\u0441\\u043A \\u043D\\u0430 \\u0432\\u044B\\u0445\\u043E\\u0434\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name\",\n        children: fullName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: 'datetime-local',\n        value: dateTime,\n        onChange: e => setDateTime(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => sendDataToServer(),\n        children: \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setModal(false),\n        style: {\n          color: \"white\",\n          textDecoration: 'underline'\n        },\n        children: \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(ShowModalWindow, \"DDgepqs4RWPQChGZfYY2OBwnjdY=\");\n_c = ShowModalWindow;\nexport default ShowModalWindow;\nvar _c;\n$RefreshReg$(_c, \"ShowModalWindow\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","ShowModalWindow","isOpen","setModal","fullName","setMessage","sendMessage","setActiveChildCard","setDateOut","className","_s","dateTime","setDateTime","Date","now","getLocalFormattedDateTime","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","console","log","sendDataToServer","prevCard","newMessage","children","onClick","e","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","style","color","textDecoration","_c","$RefreshReg$"],"sources":["C:/Users/kir/WebstormProjects/childout/src/components/ModalWindow.js"],"sourcesContent":["import './ModalWindow.css'\r\nimport {useEffect, useState} from \"react\";\r\n\r\nfunction ShowModalWindow({isOpen, setModal, fullName, setMessage, sendMessage, setActiveChildCard, setDateOut, className}) {\r\n    const [dateTime, setDateTime] = useState(Date.now())\r\n    function getLocalFormattedDateTime() {\r\n        const now = new Date();\r\n        const year = now.getFullYear();\r\n        const month = String(now.getMonth() + 1).padStart(2, '0'); // Добавляем 1, так как месяцы в JS начинаются с 0\r\n        const day = String(now.getDate()).padStart(2, '0');\r\n        const hours = String(now.getHours()).padStart(2, '0');\r\n        const minutes = String(now.getMinutes()).padStart(2, '0');\r\n        return `${year}-${month}-${day}T${hours}:${minutes}`;\r\n    }\r\n    useEffect(()=>{\r\n        console.log(dateTime)\r\n        setDateOut(dateTime)\r\n    }, [dateTime])\r\n    function sendDataToServer() {\r\n        sendMessage()\r\n        setModal(false)\r\n        setActiveChildCard(prevCard => ({...prevCard, fullName:''}))\r\n    }\r\n    useEffect(() => {\r\n        setDateTime(getLocalFormattedDateTime())\r\n    }, []);\r\n    useEffect(() => {\r\n        // Обновляем локальное сообщение, чтобы избежать бесконечного цикла\r\n        const newMessage = fullName + ' в ' + dateTime + ' ' + className;\r\n        console.log(newMessage)\r\n        setMessage(newMessage);\r\n       // Обновляем сообщение только если оно изменилось\r\n        if (setMessage) {\r\n            setMessage(newMessage);\r\n        }\r\n    }, [dateTime, fullName, setMessage]);\r\n\r\n    return(\r\n        <div className={isOpen?\"modal-window\":\"modal-window close\"}>\r\n            <div className=\"modal-window-body\" onClick={(e)=>e.stopPropagation()}>\r\n                <div className=\"modal-window-header\">Пропуск на выход</div>\r\n\r\n                    <div className={\"name\"}>{fullName}</div>\r\n                    <input type={'datetime-local'} value={dateTime} onChange={(e)=>setDateTime(e.target.value)}/>\r\n                    <button onClick={()=>sendDataToServer()}>Подтвердить</button>\r\n                    <div onClick={()=>setModal(false)} style={{color:\"white\", textDecoration:'underline'}}>Закрыть</div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ShowModalWindow;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}